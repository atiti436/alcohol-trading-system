> 下面整理了一份給 Claude 的調整指引，盡量把影響面縮到最小，也標好檔案位置，這樣就不容易「改 A 壞 B」。建議你直接把這份文字轉給他，請他照步驟實作。

  ———

  ### 目標

  - 銷售單同時保留「投資方看到的售價」（unit_price）與「實際成交價」（actual_unit_price）
  - 自動算出投資方應收金額、自己賺的差額，並寫入 cashflow_records
  - 在 CashFlow 模組裡可以看到這些紀錄並對帳
  - 刪除或取消銷售單時，對應的 cashflow 紀錄要同步清掉

  ———

  ### 1. 新增共用工具：計算銷售金額並同步 Cashflow

  檔案： webapp/src/lib/cashflow/syncSaleCashflow.ts（新檔案）
  請放一個 helper：

  import { Prisma, Sale, SaleItem } from '@prisma/client'

  type SaleWithItems = Sale & { items: SaleItem[] }

  export async function syncSaleCashflow(
    tx: Prisma.TransactionClient,
    sale: SaleWithItems
  ) {
    const reference = `sale:${sale.id}`

    // 只有確認後的訂單才需要產生 cashflow
    if (!['CONFIRMED', 'SHIPPED', 'DELIVERED', 'PAID'].includes(sale.status)) {
      await tx.cashFlowRecord.deleteMany({ where: { reference } })
      return
    }

    const investorTotal = sale.items.reduce((sum, item) =>
      sum + item.unit_price * item.quantity
    , 0)

    const actualTotal = sale.items.reduce((sum, item) =>
      sum + (item.actual_unit_price ?? item.unit_price) * item.quantity
    , 0)

    const commission = actualTotal - investorTotal

    // 避免重複寫入，先清掉舊紀錄
    await tx.cashFlowRecord.deleteMany({ where: { reference } })

    await tx.cashFlowRecord.createMany({
      data: [
        {
          type: 'INCOME',
          amount: actualTotal,
          description: `銷售實際收入 - ${sale.sale_number}`,
          category: 'SALES',
          funding_source: sale.funding_source === 'PERSONAL' ? 'PERSONAL' : 'INVESTOR',
          transaction_date: sale.created_at,
          reference,
          notes: commission !== 0 ? `利潤差額 ${commission.toFixed(0)}` : null,
          created_by: sale.created_by
        },
        {
          type: 'EXPENSE',
          amount: investorTotal,
          description: `應付投資方 - ${sale.sale_number}`,
          category: 'SETTLEMENT',
          funding_source: 'INVESTOR',
          transaction_date: sale.created_at,
          reference,
          notes: '投資方期望售價總額',
          created_by: sale.created_by
        }
      ]
    })

    if (commission !== 0) {
      await tx.cashFlowRecord.create({
        data: {
          type: commission > 0 ? 'INCOME' : 'EXPENSE',
          amount: Math.abs(commission),
          description: `銷售利潤 - ${sale.sale_number}`,
          category: 'COMMISSION',
          funding_source: 'PERSONAL',
          transaction_date: sale.created_at,
          reference,
          notes: '實際成交價與投資方售價差額',
          created_by: sale.created_by
        }
      })
    }
  }

  > 若 cashflow_records 沒有 category 欄位，請改用現有欄位或把 category 設成 undefined。不要為這個功能再改 schema。

  ———

  ### 2. 在操作銷售單的 API 中呼叫 helper

  要碰到以下檔案，每次改完記得 import { syncSaleCashflow }：

  1. webapp/src/app/api/sales/route.ts
      - 在 POST 建立銷售單時，prisma.sale.create 之後追加一次 await prisma.$transaction(async tx => syncSaleCashflow(tx, saleWithItems))。記得 include:
  { items: true } 以便 helper 計算。
      - 如果有更新銷售單的 PUT/PATCH, 也要同樣處理。
  2. webapp/src/app/api/sales/[id]/route.ts
      - 在 PUT 更新、DELETE 刪除時包在交易內：
          - 更新後呼叫 syncSaleCashflow
          - 刪除前 deleteMany({ reference }) 清掉紀錄
  3. webapp/src/app/api/sales/[id]/confirm/route.ts
      - 交易結束後，取得更新後的 sale（包含 items）叫 helper 同步。
  4. webapp/src/app/api/sales/[id]/admin-cancel/route.ts
      - 如果 shouldDelete，先刪掉 cashFlowRecord，再刪 sale。
      - 如果只是改成 CANCELLED，記得呼叫 helper 讓它自動刪光對應紀錄。
  5. webapp/src/app/api/sales/[id]/items/route.ts
      - 增減銷售項目後要重新載入整張單，然後 call syncSaleCashflow。

  所有這些呼叫都建議放在同一個 transaction 裡，避免部分成功、部分失敗。

  ———

  ### 3. 調整 Validation 與前端欄位

  - webapp/src/lib/validation.ts
    確定 actual_unit_price 的 fallback 是 unit_price，沒有就補上（其實目前已經是這邏輯，但檢查一下）。
  - webapp/src/components/sales/SaleOrderModal.tsx
      - 建議把「實際單價」欄位只在 SUPER_ADMIN 看到。
      - 當前就有 actualPrice 處理，確認送到 API 的 payload 會帶 actual_unit_price。
      - 在預覽總表時顯示投資方、實際價、差額。可以用現有 commission 欄位顯示。
  - webapp/src/app/sales/page.tsx
      - columns 那裡已有 record.actual_unit_price 顯示，確認描述清楚（例如改字樣「實際售價 (僅管理員可見)」）。
      - 若要讓投資方看不到差額，就用現有的 HideFromInvestor 包一下。

  ———

  ### 4. Cashflow 頁面顯示 Reference 與摘要

  - webapp/src/components/finance/CashFlowManager.tsx
      - 在表格欄位加一欄 reference，顯示類似 銷售單 #SA-2024-001 (點擊可跳轉)，可以用 Link 指向 /sales/${sale_id}。
      - 在明細/警示區加一段說明，提醒使用者 reference 代表來源。
  - webapp/src/app/api/cashflow/route.ts

  ———

  ### 5. 刪除銷售單時同步刪 Cashflow

  在 DELETE /api/sales/[id] 路由裡，除了刪 sale 之外，加：

  await prisma.$transaction(async tx => {
    await tx.cashFlowRecord.deleteMany({ where: { reference: `sale:${id}` } })
    await tx.sale.delete({ where: { id } })
  })

  ### 6. 安全檢查與測試

  完成後請確認：

  1. 新增/確認/編輯銷售單後，cashflow_records 會出現三筆記錄（實際收入 / 投資方應付 / 利潤差額），reference = sale:{sale.id}。
  4. SUPER_ADMIN 在 Cashflow 頁面能夠搜尋 reference 找到該筆銷售單。
  5. CLI 下跑 npm run lint 與 npm run test security（或專案既有測試腳本），確保沒有新的 lint/test 失敗。

  ———

  - 不動既有的 SaleItem schema（因為 unit_price／actual_unit_price 原本就存在）
  - 不用改 Cashflow schema（善用既有的 reference 欄位）
  - 流程集中在 helper 裡，日後要改現金流邏輯只改一處
  - API 只要把 syncSaleCashflow 嵌進現有交易裡就好，出錯時整個交易 rollback，避免「按了沒反應」或 500